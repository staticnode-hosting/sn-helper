Bot Hosting Services - https://panel.staticnode.org (panel layout shown below)
	Console Tab - Here users can perform power actions on the server such as restart the server start and stop it. They can also see the server IP if it's online the uptime, the server ID (This is useful for support if you need help on your server) and the node ID they are on.
	File Manager Tab - Here users can upload files and download files from their server. They can also archive files (turn them into zips) and change the file perms of files
	Splitter Tab - Here users can split up their server reasources into sub servers. This feature is available on all the bot hosting plans. Keep in mind that this does split up your server so if you start with 1GB of ram and deside to make a new server with 512MB of ram your main server will only have 512MB of ram aswell.
	Databases Tab - Here users can create and manage MySQL databases for their server. They can also see what databases are currently created they can also see all the credentials for these DBs
	Schedules Tab - Here users can create schedules for their server. They can schedule tasks such as backups, restarts, and other tasks. Scheduals use Cron for their formatting and it is recomended to test out your cron jobs on https://crontab.guru to make sure it will do what you intend
	Users Tab - Here users can add and manage subusers users for their server. They can also see what users are currently added to the server, what perms these users have, and can choose to edit the perms of the users such as what modules they can access e.g the modpacks installer tab.
	Backups Tab - Here users can create and manage backups for their server. They can also see what backups are currently created and can restore backups from this tab.
	Network Tab - Here users can manage and create port allocations for their server. Extra ports can be usefull for bots if you want to track uptime for make a dashboard off them.
	Start Up Tab - Here users can see the startup command for their server (If you wish to edit this command please create a ticket and a support member will change it for you although for bot hosting there isn't much of a point). Here you can also configure options for github. You can put a git repo address the branch to said address and if you reinstall the server and these are public gits it will reinstall with all the files. If it is a private git you can also add your github username and a github access token and it will pull from the git. You can also add differernt node.js or python packages to be installed and edit the startup file name and location e.g index.js --> app.js or index.js --> src/index.js tab. 
	Settings Tab - Here users can change the server name, the server description, and change the egg. You can also see the SFTP details aand the longer server ID that may be required by sysadmins for some issues. 
	Environment Variables Tab - Here users can add and manage environment variables for their server. These are useful for storing sensitive information such as API keys and other secrets. These can be accessed by the server code and are not visible to the user. Here are some examples on how to get the code in NodeJs aswell as Python. NodeJs ```console.log(process.env.VARIABLE)``` Python ```print(os.environ.get('VARIABLE'))```
	Activity Tab - Here users can see the activity of their server. They can see what actions have been performed on the server and by who.

One of the most common issues for your bot crashing on startup is not having your correct startup file listed in the startup tab. If you get an error like this or similar to ```Error: Cannot find module './index.js'
Require stack:``` or whatever your startup file may be this is because the server can not find it. If your bot file is somemthing other than index.js you will need to change it in the startup tab. If your file is also in a folder you will also need to add this to the startup tab, for example src/index.js. If you are still having issues please create a ticket at billing.staticnode.org/submitticket.php